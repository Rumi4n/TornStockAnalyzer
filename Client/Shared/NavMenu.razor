@using BlazorApp.Shared
@using System.Timers;
@implements IDisposable;

@inject VariableNotifier Notifier

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">Static Web Apps</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass height-90" @onclick="ToggleNavMenu">
    <nav class="flex-column flex-navigation">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
        </div>
        <div class="nav-item px-3 api-key-position">
            <span class="oi oi-key api-key-icon" aria-hidden="true"></span>
            API key
            <input type="text" @bind="@ApiKeyValue" @bind:event="oninput" @onkeyup="@ResetTimer" id="api-key-input" class="api-key-input">
        </div>
    </nav>
</div>

@code {
    public string ApiKeyValue { get; set; } = "";

    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;
    private Timer aTimer = default!;

    protected override void OnInitialized()
    {
        aTimer = new Timer(1000);
        aTimer.Elapsed += OnUserFinish;
        aTimer.AutoReset = false;

        Notifier.Notify += OnNotify;
    }

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }  

    private async void OnUserFinish(Object? source, ElapsedEventArgs e)
    {
        Notifier.UpdateApiValue(ApiKeyValue);
        StateHasChanged();
    }

    void ResetTimer(KeyboardEventArgs e)
    {
        aTimer.Stop();
        aTimer.Start();        
    }

    public async Task OnNotify()
    {
        ApiKeyValue = Notifier.ApiKey;
    }

    void IDisposable.Dispose()
    {
        aTimer?.Dispose();
        Notifier.Notify -= OnNotify;
    }
}
